apply plugin: "base"
apply plugin:  "groovy"
apply plugin: 'application'
apply plugin:  "maven"

group = "edu.holycross.shot"
version = '0.0.1'

mainClassName = "Parser"

apply from: "versions.gradle"




if (hasProperty('pub')) {
    System.err.print "Using configuration data from ${pub}"
    File confFile = new File(pub)
    if (! confFile.exists()) {
        throw new Exception("No publication configuration file ${pub} found.")
    } else {
        apply from: pub
    }

} else {
    File confFile = new File("pub.gradle")
    if (! confFile.exists()) {
        throw new Exception("No publication configuration file ${confFile} found\
.")
    } else {
        println "Using default configuration in 'pub.gradle'"
        apply from: "pub.gradle"
    }
}



repositories {
    mavenCentral()
    maven {
        url "http://beta.hpcc.uh.edu/nexus/content/repositories/releases"
    }
    maven {
      url "http://beta.hpcc.uh.edu/nexus/content/repositories/papyriinfo/"
    }
}

dependencies {
  compile group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion
  compile group: 'org.xerial',name: 'sqlite-jdbc', version: sqlLiteVersion

  compile group: 'edu.harvard.chs', name : 'cite' , version: '0.90.0'

  compile group : 'edu.unc.epidoc', name: 'transcoder', version : epidocVersion
  compile group: 'net.sf.opencsv', name: 'opencsv', version : opencsvVersion

  testCompile group: 'junit', name: 'junit', version: junitVersion
  testCompile group :'xmlunit', name: 'xmlunit', version: xmlunitVersion
}


task inflClass(type: Copy) {
  from ("data/inflection") {
    include "*.csv"
  }
  into "${buildDir}"
}

task morphStems() {
  description = "Creates composite csv file for morphological stems collection."
}
morphStems.doLast {
  File stems = new File(buildDir, "morphstems.csv")  
  stems.setText("StemUrn,LexicalEntity,Lemma,Stem,StemClass,Application\n")

  def srcDirs = ["data/nounstemsrc", "data/verbstemsrc"]

  srcDirs.each {
    File dir = new File(it)
    dir.eachFileMatch(~/.*.csv/) { csvFile ->  
      Integer count = 0
      csvFile.eachLine { ln ->
	if (count > 0) {
	  stems.append("${ln}\n", "UTF-8")
	}
	count++;
      }
    }
  }
}

task csv(dependsOn: [inflClass, morphStems]) {
  description = "Builds 5 composite csv files from multiple source files."
}

csv.doLast {
  println "Build csv now. Should also copy inventory.xml to work area."


  File endings = new File(buildDir, "endings.csv")
  File stemtypes = new File(buildDir, "stemtypes.csv")
  File tags = new File(buildDir, "tags.csv")

}


task db(dependsOn: ["csv"]) {
  description = "Builds sqlite database from csv source."
}

db.doLast {
  println "Build sqlite db now."
}



uploadArchives {
    repositories.mavenDeployer {
        repository(url: nexusRepo) {                   
            authentication (userName: nexusUser, password: nexusPassword)
        }
    }
}



// add csv files to executable jar?  or sqlite binary?
task uberjar(type: Jar,dependsOn:[':compileJava',':compileGroovy']) {
    from files(sourceSets.main.output.classesDir)
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    manifest {
        attributes 'Main-Class': mainClassName
    }
}