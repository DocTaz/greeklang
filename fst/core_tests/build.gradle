
apply plugin: "groovy"
apply plugin: "java"


// Reads data to submit:
String readSubmission(File f) {
  StringBuilder data = new StringBuilder()
  f.eachLine { ln ->
    if (ln.size() < 1) {
      // empty
    } else if (ln[0] == "%") {
      // comment
    } else if (ln ==~ /^[\s]*$/) {
      // no data
    } else {
      data.append(ln + "\n")
    }
  }
  return data.toString()
}


// Runs a compiled transducer over a test list of statements
// and compares actual results to expected results.
void assessTests(String transducer, ArrayList testList) {
  File testForms = new File("${buildDir}/coreforms.txt")
  String cmd = "${FSTINFL} ${transducer} ${testForms}"

  System.err.println "Running  " + cmd + " with data from:"
  testList.each { fname ->
    System.err.println "\t" + fname
    File testData = new File("${fname}_submission.txt")
    testForms.setText(readSubmission(testData))
    String expectedReply = new File("${fname}_expected.txt").getText()
    Process process = cmd.execute()
    def out = new StringBuffer()
    def err = new StringBuffer()
    process.consumeProcessOutput( out, err )
    process.waitFor()

    System.err.println "Expected " + expectedReply.size() + ", received " + out.toString().size()
    assert out.toString() == expectedReply
    testForms.setText("")
  }
}

task testOmegaVerbAcceptor(dependsOn: ':fst:setupCoreTests') {
  description = "Tests verb acceptor"
}
testOmegaVerbAcceptor.doLast {
  String verbAcceptor = "${buildDir}/fst/acceptors/verb.a"
  def testList = [
    "${projectDir}/acceptors/w_verb/1stpp",
    "${projectDir}/acceptors/w_verb/2ndpp",
    "${projectDir}/acceptors/w_verb/3rdpp",
    "${projectDir}/acceptors/w_verb/4thpp",
    "${projectDir}/acceptors/w_verb/5thpp",
    "${projectDir}/acceptors/w_verb/6thpp"
  ]
  assessTests(verbAcceptor, testList)
}


task testInfinAcceptor(dependsOn: ':fst:setupCoreTests') {
  description = "Tests infinitive acceptor"
}
testInfinAcceptor.doLast {
  String infinitiveAcceptor = "${buildDir}/fst/acceptors/infinitive.a"
  def testList = [
    "${projectDir}/acceptors/infinitive/1stpp",
    "${projectDir}/acceptors/infinitive/3rdpp",
    "${projectDir}/acceptors/infinitive/4thpp",
    "${projectDir}/acceptors/infinitive/5thpp"
  ]
  assessTests(infinitiveAcceptor, testList)
}


task testAcceptors(dependsOn: [testOmegaVerbAcceptor, testInfinAcceptor]) {
  description = "Tests all acceptor transducers"
}

task testCoreFst(dependsOn: [testAcceptors]) {
  description = "Tests integration of transducers"
}
testCoreFst.doLast {
  System.err.println "Completed integration tests on all transducers"
}
